@use 'sass:map';
@use './flicktionary-colors' as theme-colors;
@use '@angular/material' as mat;

html {
  @include mat.theme(
    (
      color: (
        primary: theme-colors.$primary-palette,
        tertiary: theme-colors.$tertiary-palette,
      ),
      typography: Roboto,
      density: 0,
    )
  );
}

:root {
  @include mat.button-overrides(
    (
      text-label-text-color: map.get(theme-colors.$original-palette, 'light'),
      text-hover-state-layer-opacity: 0.25,
    )
  );

  @include mat.tooltip-overrides(
    (
      container-color: map.get(theme-colors.$original-palette, 'primary--dark'),
      supporting-text-color: map.get(theme-colors.$original-palette, 'light'),
    )
  );

  @include mat.dialog-overrides(
    (
      container-color: map.get(theme-colors.$original-palette, 'primary--dark'),
      subhead-color: map.get(theme-colors.$original-palette, 'light'),
      supporting-text-color: map.get(theme-colors.$original-palette, 'light'),
      content-padding: 0,
      headline-padding: 0,
    )
  );
}

.movie-card-container {
  @include mat.card-overrides(
    (
      subtitle-text-color: map.get(theme-colors.$original-palette, 'light'),
      outlined-outline-color: map.get(theme-colors.$primary-palette, 20),
    )
  );
}

// $my-primary: mat.define-palette(theme-colors.$primary-palette);
// $my-accent: mat.define-palette(theme-colors.$tertiary-palette);
// $my-warn: mat.define-palette(theme-colors.$error);

// $my-theme: mat.define-light-theme(
//   (
//     color: (
//       primary: $my-primary,
//       accent: $my-accent,
//       warn: $my-warn,
//     ),
//   )
// );

// @include mat.all-component-themes($my-theme);
